// <auto-generated />
using System;
using HotelBooking.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelBooking.DAL.Migrations
{
    [DbContext(typeof(HotelBookingDbContext))]
    [Migration("20210929124328_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelBooking.Domain.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.BookingExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingExtras");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Sweden",
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 158, DateTimeKind.Local).AddTicks(8525),
                            Name = "Plaza Bay Hotel",
                            ThumbnailImage = "https://picsum.photos/500"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Sweden",
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 161, DateTimeKind.Local).AddTicks(3631),
                            Name = "Stadshotellet",
                            ThumbnailImage = "https://picsum.photos/500"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Sweden",
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 161, DateTimeKind.Local).AddTicks(3734),
                            Name = "Sunkstället",
                            ThumbnailImage = "https://picsum.photos/500"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Sweden",
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 161, DateTimeKind.Local).AddTicks(3744),
                            Name = "Stugstugan",
                            ThumbnailImage = "https://picsum.photos/500"
                        });
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2360),
                            HotelId = 1,
                            Score = 0.0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2899),
                            HotelId = 1,
                            Score = 1.0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2910),
                            HotelId = 1,
                            Score = 3.0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2913),
                            HotelId = 1,
                            Score = 5.0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2916),
                            HotelId = 2,
                            Score = 4.0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2918),
                            HotelId = 2,
                            Score = 4.0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2921),
                            HotelId = 2,
                            Score = 2.0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2924),
                            HotelId = 2,
                            Score = 0.0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2927),
                            HotelId = 3,
                            Score = 1.0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2930),
                            HotelId = 3,
                            Score = 2.0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2933),
                            HotelId = 3,
                            Score = 3.0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(2936),
                            HotelId = 3,
                            Score = 1.0
                        });
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<int>("PricePerNight")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(5166),
                            MaxCapacity = 1,
                            PricePerNight = 100,
                            Type = "Single Room"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(5737),
                            MaxCapacity = 2,
                            PricePerNight = 150,
                            Type = "Double Room"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 29, 14, 43, 28, 162, DateTimeKind.Local).AddTicks(5746),
                            MaxCapacity = 3,
                            PricePerNight = 200,
                            Type = "Triple Room"
                        });
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Booking", b =>
                {
                    b.HasOne("HotelBooking.Domain.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBooking.Domain.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId");

                    b.HasOne("HotelBooking.Domain.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId");

                    b.Navigation("Hotel");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.BookingExtra", b =>
                {
                    b.HasOne("HotelBooking.Domain.Models.Booking", null)
                        .WithMany("BookingExtras")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Rating", b =>
                {
                    b.HasOne("HotelBooking.Domain.Models.Hotel", "Hotel")
                        .WithMany("Ratings")
                        .HasForeignKey("HotelId");

                    b.HasOne("HotelBooking.Domain.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId");

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Room", b =>
                {
                    b.HasOne("HotelBooking.Domain.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId");

                    b.HasOne("HotelBooking.Domain.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Booking", b =>
                {
                    b.Navigation("BookingExtras");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Hotel", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelBooking.Domain.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
